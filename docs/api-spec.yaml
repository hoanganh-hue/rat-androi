openapi: 3.0.3
info:
  title: DogeRat Web Admin API
  version: 1.0.0
  description: REST API for authentication, users, devices, and audit trail
servers:
  - url: http://localhost:5000
    description: Local server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
        user:
          type: object
          properties:
            id: { type: string }
            username: { type: string }
            email: { type: string }
            role: { type: string, enum: [admin, manager, operator, viewer] }
paths:
  /api/health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
  /api/auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/LoginRequest' }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: { $ref: '#/components/schemas/LoginResponse' }
        '400': { description: Validation error }
        '401': { description: Invalid credentials }
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, email, password]
              properties:
                username: { type: string }
                email: { type: string, format: email }
                password: { type: string }
                role: { type: string, enum: [admin, manager, operator, viewer] }
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
        '409': { description: Conflict }
  /api/auth/me:
    get:
      summary: Get current user
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
  /api/devices:
    get:
      summary: List devices
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
  /api/devices/{id}:
    get:
      summary: Get device detail
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
        '404': { description: Not found }
  /api/devices/{id}/command:
    post:
      summary: Send command to device
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [command]
              properties:
                command: { type: string }
                params: { type: object }
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
        '503': { description: Device offline }
  /api/users:
    get:
      summary: List users (admin only)
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
        '403': { description: Forbidden }
  /api/audit:
    get:
      summary: List audit logs (admin/manager)
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
        '403': { description: Forbidden }

