# Cloudflare Tunnel Configuration
# Secure Zero-Trust alternative to ngrok
# 
# Setup Instructions:
# 1. Install cloudflared: https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/
# 2. Authenticate: cloudflared tunnel login
# 3. Create tunnel: cloudflared tunnel create dogerat-tunnel
# 4. Run: cloudflared tunnel --config cloudflared.yml run
#
# Benefits over ngrok:
# - mTLS between tunnel and origin
# - OIDC/SSO authentication before accessing API
# - Access logs and policies
# - No public exposure without authentication
# - Free for basic use

tunnel: YOUR_TUNNEL_ID  # Replace with actual tunnel ID after creation
credentials-file: /root/.cloudflared/YOUR_TUNNEL_ID.json

# Ingress rules - defines how traffic is routed
ingress:
  # API endpoint - requires authentication via Cloudflare Access
  - hostname: api.dogerat.com
    service: http://server:5000
    originRequest:
      # Enable HTTP/2
      http2Origin: true
      # Disable TLS verification for local origin (use mTLS in production)
      noTLSVerify: false
      # Connection timeout
      connectTimeout: 30s
      # Keep alive
      keepAliveConnections: 10
      keepAliveTimeout: 90s

  # WebSocket/Socket.IO endpoint
  - hostname: ws.dogerat.com
    service: http://server:5000
    originRequest:
      http2Origin: true
      noTLSVerify: false

  # Frontend application
  - hostname: app.dogerat.com
    service: http://client:80
    originRequest:
      noTLSVerify: false

  # Catch-all rule (required)
  - service: http_status:404

# Metrics and monitoring
metrics: 0.0.0.0:9090

# Logging
loglevel: info
